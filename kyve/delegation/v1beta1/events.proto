syntax = "proto3";

package kyve.delegation.v1beta1;

import "gogoproto/gogo.proto";
import "kyve/delegation/v1beta1/delegation.proto";
import "kyve/delegation/v1beta1/params.proto";

option go_package = "github.com/KYVENetwork/chain/x/delegation/types";

// EventUpdateParams is an event emitted when the module parameters are updated.
// emitted_by: MsgUpdateParams
message EventUpdateParams {
  // old_params is the module's old parameters.
  kyve.delegation.v1beta1.Params old_params = 1 [(gogoproto.nullable) = false];
  // new_params is the module's new parameters.
  kyve.delegation.v1beta1.Params new_params = 2 [(gogoproto.nullable) = false];
  // payload is the parameter updates that were performed.
  string payload = 3;
}

// ---------- Delegating Events ----------

// EventDelegate is an event emitted when someone delegates to a protocol node.
// emitted_by: MsgDelegate
message EventDelegate {
  // address is the account address of the delegator.
  string address = 1;
  // staker is the account address of the protocol node.
  string staker = 2;
  // amount ...
  uint64 amount = 3;
}

// EventStartUndelegation is an event emitted when someone starts an undelegation from a protocol node.
// emitted_by: EndBlock
message EventStartUndelegation {
  // address is the address of the delegator.
  string address = 1;
  // staker is the address of the protocol node.
  string staker = 2;
  // amount is the amount to be undelegated from the protocol node.
  uint64 amount = 3;
  // estimated_undelegation_date is the date in UNIX seconds on when the undelegation will be performed.
  // Note, this number will be incorrect if a governance proposal changes `UnbondingDelegationTime` while unbonding.
  uint64 estimated_undelegation_date = 4;
}

// EventUndelegate is an event emitted when someone undelegates from a protocol node.
// emitted_by: EndBlock
message EventUndelegate {
  // address is the account address of the delegator.
  string address = 1;
  // staker is the account address of the protocol node.
  string staker = 2;
  // amount ...
  uint64 amount = 3;
}

// EventRedelegate is an event emitted when someone redelegates from one protocol node to another.
// emitted_by: MsgRedelegate
message EventRedelegate {
  // address is the account address of the delegator.
  string address = 1;
  // from_staker ...
  string from_staker = 2;
  // to_staker is the account address of the new staker in the the pool
  string to_staker = 3;
  // amount ...
  uint64 amount = 4;
}

// EventWithdrawRewards ...
// emitted_by: MsgRedelegate, MsgDelegate, MsgWithdrawRewards, EndBlock
message EventWithdrawRewards {
  // address is the account address of the delegator.
  string address = 1;
  // staker is the account address of the protocol node the users withdraws from.
  string staker = 2;
  // amounts ...
  string amounts = 3;
}

// EventSlash is an event emitted when a protocol node is slashed.
// emitted_by: MsgSubmitBundleProposal, EndBlock
message EventSlash {
  // pool_id is the unique ID of the pool.
  uint64 pool_id = 1;
  // staker is the account address of the protocol node.
  string staker = 2;
  // amount ...
  uint64 amount = 3;
  // slash_type
  SlashType slash_type = 4;
}
