syntax = "proto3";

package kyve.funders.v1beta1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/KYVENetwork/chain/x/funders/types";

// Funder is the object which holds info about a single pool funder
message Funder {
  // address ...
  string address = 1;
  // moniker ...
  string moniker = 2;
  // identity is the 64 bit keybase.io identity string
  string identity = 3;
  // website ...
  string website = 4;
  // contact ...
  string contact = 5;
  // description are some additional notes the funder finds important
  string description = 6;
}

// Funding is the object which holds info about the current funding
// funder_address and pool_id (m2m) are unique together which means that
// a funder can only fund each pool once and a pool can only be funded
// by each funder once. However, a funder can update the amount of funds.
message Funding {
  // funder_address is the address of the funder
  string funder_address = 1;
  // pool_id is the id of the pool this funding is for
  uint64 pool_id = 2;
  // amounts is a list of coins the funder wants to fund the pool with
  repeated cosmos.base.v1beta1.Coin amounts = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // amounts_per_bundle defines the amount of each coin that are distributed
  // per finalized bundle
  repeated cosmos.base.v1beta1.Coin amounts_per_bundle = 4 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // total_funded is the total amount of coins that the funder has funded
  repeated cosmos.base.v1beta1.Coin total_funded = 5 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// FundingState is the object which holds info about the funding state of a pool
message FundingState {
  // pool_id is the id of the pool this funding is for
  uint64 pool_id = 1;
  // active_funder_addresses is the list of all active fundings
  repeated string active_funder_addresses = 2;
}
