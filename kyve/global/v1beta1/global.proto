syntax = "proto3";

package kyve.global.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/KYVENetwork/chain/x/global/types";

// Params defines the global module parameters.
message Params {
  // min_gas_price defines the minimum gas price value for all transactions.
  string min_gas_price = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // burn_ratio defines the ratio of transaction fees burnt.
  string burn_ratio = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  // gas_adjustments can add a constant amount of gas to a specific message type.
  // This gives more control to make certain messages more expensive to avoid spamming
  // of certain types of messages.
  repeated GasAdjustment gas_adjustments = 3 [(gogoproto.nullable) = false];

  // gas_refunds lets the governance specify a fraction of how much gas
  // a user gets refunded for a certain type of transaction.
  // This could be used to make transactions which support to network cheaper.
  // Gas refunds only work if the transaction only included one message.
  repeated GasRefund gas_refunds = 4 [(gogoproto.nullable) = false];
}

// GasAdjustment stores for every message type a fixed amount
// of gas which is added to the message
message GasAdjustment {
  // type of the sdk-message
  string type = 1;
  // amount of gas which is added to the message
  uint64 amount = 2;
}

// GasRefund stores the fraction of gas which will be refunded for a given
// type of message.
// This only works if the transaction only includes one message.
message GasRefund {
  // type of the sdk-message
  string type = 1;
  // fraction in decimal representation between 0 and 1
  string fraction = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}
