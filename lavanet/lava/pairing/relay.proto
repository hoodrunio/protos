syntax = "proto3";
package lavanet.lava.pairing;
import "gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/lavanet/lava/x/pairing/types";

service Relayer {
    rpc Relay (RelayRequest) returns (RelayReply) {}
    rpc RelaySubscribe (RelayRequest) returns (stream RelayReply) {}
    rpc Probe (google.protobuf.UInt64Value) returns (google.protobuf.UInt64Value) {}
}

message RelaySession {
    string spec_id = 1;
    bytes content_hash = 2;
    uint64 session_id = 3;
    uint64 cu_sum = 4; // total compute unit used including this relay
    string provider = 5;
    uint64 relay_num = 6;
    QualityOfServiceReport qos_report = 7;
    int64 epoch = 8;
    bytes unresponsive_providers = 9;
    string lava_chain_id = 10;
    bytes sig = 11;
    Badge badge = 12;
}

message RelayPrivateData {
    string connection_type = 1;
    string api_url = 2; // some relays have associated urls that are filled with params ('/block/{height}')
    bytes data = 3;
    int64 request_block = 4;
    string api_interface = 5;
    bytes salt = 6;
}

message RelayRequest {
    RelaySession relay_session = 1;
    RelayPrivateData relay_data= 2;
    VRFData data_reliability = 3;
}

message Badge {
    uint64 cu_allocation =1;
    int64 epoch = 2;
    bytes badge_pk = 3;
    string spec_id = 4;
    bytes project_sig = 5;
}

message RelayReply {
    bytes data = 1;
    bytes sig = 2; // sign the data hash+query hash+nonce
    uint32 nonce = 3;
    int64 latest_block = 4;
    bytes finalized_blocks_hashes = 5;
    bytes sig_blocks = 6; //sign latest_block+finalized_blocks_hashes+session_id+block_height+relay_num
}

message VRFData {
    string chain_id = 1;
    int64 epoch = 2;
    bool differentiator = 3;
    bytes vrf_value = 4;
    bytes vrf_proof = 5;
    bytes provider_sig = 6;
    bytes all_data_hash = 7;
    bytes query_hash = 8; //we only need it for payment later
    bytes sig = 9;
}

message QualityOfServiceReport{
    string latency = 1 [
        (gogoproto.moretags) = "yaml:\"Latency\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];
    string availability  = 2 [
        (gogoproto.moretags) = "yaml:\"availability\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];
    string sync = 3 [
        (gogoproto.moretags) = "yaml:\"sync\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];
}